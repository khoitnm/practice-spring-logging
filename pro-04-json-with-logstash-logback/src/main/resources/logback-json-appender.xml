<included>
    <!-- JSON -->
    <appender name="JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <!--
            We can add some additional decorators here if we want. Otherwise, just feel free to comment them out.
            <jsonFactoryDecorator class="net.logstash.logback.decorate.NullJsonFactoryDecorator"/>
            -->
            <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</timestampPattern>
            <timeZone>UTC</timeZone>
            <shortenedLoggerNameLength>36</shortenedLoggerNameLength>
            <fieldNames>
                <!-- tag names are the same as properties names in LogstashFieldNames.java -->
                <timestamp>timeStamp</timestamp>
                <level>severity</level>
                <levelValue>[ignore]</levelValue>
                <thread>thread</thread>
                <mdc>mdc</mdc>
                <message>message</message>
                <logger>logger</logger>
                <version>[ignore]</version>
                <callerClass>[ignore]</callerClass> <!-- callerClass should be the same as logger -->
                <callerMethod>method</callerMethod>
                <callerLine>line</callerLine>
                <callerFile>[ignore]</callerFile>
                <stackTrace>stackTrace</stackTrace>
            </fieldNames>
            <includeCallerData>true</includeCallerData>
            <includeMdc>true</includeMdc>
<!--            <includeMdcKeyName>key01</includeMdcKeyName>-->

            <!-- Custom stacktrace -->
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <maxDepthPerThrowable>30</maxDepthPerThrowable>
                <maxLength>2048</maxLength>
                <shortenedClassNameLength>20</shortenedClassNameLength>
                <rootCauseFirst>true</rootCauseFirst>

                <!-- Explanation of StackHash: https://github.com/logstash/logstash-logback-encoder/blob/main/stack-hash.md -->
                <inlineHash>true</inlineHash>

                <!-- Recommended exclusion rules: https://github.com/logstash/logstash-logback-encoder/blob/main/stack-hash.md -->
                <!-- generated class names -->
                <exclude>\$\$FastClassByCGLIB\$\$</exclude>
                <exclude>\$\$EnhancerBySpringCGLIB\$\$</exclude>
                <exclude>^sun\.reflect\..*\.invoke</exclude>
                <!-- JDK internals -->
                <exclude>^com\.sun\.</exclude>
                <exclude>^sun\.net\.</exclude>
                <!-- dynamic invocation -->
                <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                <exclude>^org\.springframework\.cglib\.</exclude>
                <exclude>^org\.springframework\.transaction\.</exclude>
                <exclude>^org\.springframework\.validation\.</exclude>
                <exclude>^org\.springframework\.app\.</exclude>
                <exclude>^org\.springframework\.aop\.</exclude>
                <exclude>^java\.lang\.reflect\.Method\.invoke</exclude>
                <!-- Spring plumbing -->
                <exclude>^org\.springframework\.ws\..*\.invoke</exclude>
                <exclude>^org\.springframework\.ws\.transport\.</exclude>
                <exclude>^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.</exclude>
                <exclude>^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.</exclude>
                <exclude>^org\.springframework\.web\.filter\.</exclude>
                <!-- Tomcat internals -->
                <exclude>^org\.apache\.tomcat\.</exclude>
                <exclude>^org\.apache\.catalina\.</exclude>
                <exclude>^org\.apache\.coyote\.</exclude>
                <exclude>^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker</exclude>
                <exclude>^java\.lang\.Thread\.run$</exclude>
            </throwableConverter>
        </encoder>
    </appender>

</included>